import copydef bc(x):	return bin(x).count("1")def solve(g):	ans = n	for i in xrange(2 ** n):		if n - bc(i) >= ans: continue		#print "i=", i		e = 0		r = 0		s = 0		v = 0		for j in g:			#print "j=", j			if (2 ** (j - 1)) & i == 0: continue			v = v + 1			l = 0			for k in g[j]:				#print "k=", k				if (2 ** (k - 1)) & i != 0: l = l + 1			e = e + l			if l == 2: r = r + 1			elif l != 1 and l != 3: s = s + 1		if r == 1 and s == 0 and e / 2 == v - 1:			ans = n - bc(i)			#print bin(i), ans, e, v	return anst = input()for i in xrange(t):	print "Case #" + str(i + 1) + ":",	n = input()	g = {}	for j in xrange(n):		g[j + 1] = []	for j in xrange(n - 1):		[x, y] = map(int, raw_input().split())		g[x].append(y)		g[y].append(x)	#print g	print solve(g)