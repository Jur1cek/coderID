import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int T = input.nextInt();
        int k = 1;
        int i, j, n, l;
        char[][] arr;
        String[] arr1, arr2, arr3;
        String s1;
        char[] s;
        int cant;
        
        while(k <= T) {
            n = input.nextInt(); l = input.nextInt();
            arr1 = new String[n]; arr2 = new String[n]; arr3 = new String[n];
            arr = new char[n][l];
            for(i=0; i<n; i++) arr1[i] = input.next();
            for(i=0; i<n; i++) arr2[i] = input.next();
            Arrays.sort(arr2);
            cant = 0;
            while(cant <= (int)Math.pow(2,l)) {
                arreglo(arr1,arr,n,l);
                s1 = Integer.toBinaryString(cant);
                s = new char[l]; j = s1.length()-1;
                for(i=l-1; i>=0 && j>=0; i--, j--) {
                    s[i] = s1.charAt(j);
                }
                for(i=0; i<s.length; i++) {
                    if(s[i] == '1')
                        cambiar_bit(arr,i,n);
                }
                pasar_arr(arr3,arr,n,l);
                Arrays.sort(arr3);
                if(comparar(arr2,arr3)) {
                    System.out.println("Case #"+k+": "+Integer.bitCount(cant));
                    break;
                }
                cant++;
            }
            if(cant == (int)Math.pow(2,l) + 1)
                System.out.println("Case #"+k+": NOT POSSIBLE");
            k++;
        }
    }
    
    public static boolean comparar(String[] arr1, String[] arr2) {
        int i, j;
        for(i=0; i<arr1.length; i++) {
            if(arr1[i].compareTo(arr2[i]) != 0)
                return false;
        }
        return true;
    }
    
    public static char[][] arreglo(String[] arr1, char[][] arr2, int n, int l) {
        int i, j;
        for(i=0; i<n; i++) for(j=0; j<l; j++) arr2[i][j] = arr1[i].charAt(j);
        return arr2;
    }
    
    public static char[][] cambiar_bit(char[][] arr, int columna, int n) {
        int i;
        for(i=0; i<n; i++) {
            if(arr[i][columna] == '1') arr[i][columna] = '0';
            else                       arr[i][columna] = '1';
        }
        return arr;
    }
    
    public static String[] pasar_arr(String[] arr1, char[][]arr2, int n, int l) {
        int i, j;
        for(i=0; i<n; i++) {
            arr1[i] = "";
            for(j=0; j<l; j++) {
                arr1[i] = arr1[i] + arr2[i][j];
            }
        }
        return arr1;
    }
}