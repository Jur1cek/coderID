#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<queue>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<stdlib.h>
#include<ctype.h>
#include<utility>
#include<cmath>
using namespace std;
//#pragma comment(linker, "/STACK:1024000000,1024000000")
#define eps 1e-7
#define ll long long
#define i64 __int64
#define INF 1000000005
#define pb push_back
#define sz(b) (int)b.size()
#define lson k<<1
#define rson k<<1|1
#define MOD 1000000007
#define CLR(t,x) memset(t,x,sizeof(t));
#define REP(k,x,y) for(k=x;k<y;k++)
#define N 1500000
int idx,p[1005],nxt[1005],vv[1005],vis[25],vis2[25],num[50000],que[1005];
inline void add(int u,int v)
{
    nxt[idx]=p[u];
    vv[idx]=v,p[u]=idx++;
}
inline int bfs(int rt,int m)
{
    int head=0,rear=0,nump=1;
    que[rear++]=rt;
    vis2[rt]=1;
    while(head!=rear)
    {
        int u=que[head++],cnt=0;
        for(int i=p[u];i!=-1;i=nxt[i])
        {
            int v=vv[i];
            if(vis[v]||vis2[v]) continue;
            vis2[v]=1;
            que[rear++]=v;
            cnt++;
            nump++;
        }
        if(cnt!=2&&cnt!=0) return 0;
    }
    return nump==m;
}
int main()
{
    freopen("B-small-attempt0.in","r",stdin);
    freopen("B-small-attempt0.out","w",stdout);
    int cas,n,tt=1,u,v;
    scanf("%d",&cas);
    while(cas--)
    {
        scanf("%d",&n);
        idx=0;for(int i=0;i<n;i++) p[i]=-1;
        for(int i=0;i<n-1;i++)
        {
            scanf("%d%d",&u,&v);
            u--,v--;
            add(u,v);add(v,u);
        }
        int S=(1<<n),ans=INF;
        CLR(num,0);
        for(int i=0;i<S;i++) num[i]=num[i>>1]+(i&1);
        for(int i=0;i<S;i++)
        {
            CLR(vis,0);
            for(int j=0;j<n;j++) if(i&(1<<j)) vis[j]=1;
            for(int j=0;j<n;j++)
            {
                if(vis[j]) continue;
                CLR(vis2,0);
                if(bfs(j,n-num[i]))
                {
                    ans=min(ans,num[i]);
                    break;
                }
            }
        }
        printf("Case #%d: %d\n",tt++,ans);
    }
    return 0;
}
